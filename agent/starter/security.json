{
  "agent_id": "security_agent_production",
  "model": "openai",
  "role": "Real-time Solana blockchain security monitor with live threat detection",
  "network": "solana", 
  "time": "24h",
  "research_tools": ["Solana RPC", "Threat Intelligence", "DuckDuckGo"],
  "metric_name": "security",
  "prompts": {
    "system": "You are a production Web3 security analyst for Solana blockchain. Generate ONLY working executable Python code. NO examples, NO explanations, NO mock data. Use real APIs and working logic only. Network: {network}. Role: {role}. Time: {time}. Metric: {metric_name} = {metric_state}",
    
    "analysis_code_prompt": "Generate working Python security analysis code. Use real Solana RPC calls. RETURN ONLY EXECUTABLE CODE.\n\nInputs:\nNotifications: {notifications_str}\nAPIs: {apis_str}\nPrevious: {prev_analysis}\nIntelligence: {rag_summary}\nBefore: {before_metric_state}\nAfter: {after_metric_state}\n\nCode must:\n1. Use os.getenv() for real environment variables\n2. Make actual Solana RPC requests\n3. Analyze real threat patterns\n4. Print working results\n5. Handle real errors\n\nSTART WITH: from dotenv import load_dotenv",
    
    "analysis_code_on_first_prompt": "Generate initial working security monitoring code. Use real Solana blockchain data. RETURN ONLY EXECUTABLE CODE.\n\nInputs:\nAPIs: {apis_str}\nNetwork: {network}\n\nCode must:\n1. Connect to real Solana RPC\n2. Monitor real wallet addresses\n3. Detect actual security threats\n4. Print real monitoring results\n\nSTART WITH: from dotenv import load_dotenv",
    
    "strategy_prompt": "Based on real security analysis results, create actionable strategy:\n\nAnalysis: {analysis_results}\nAPIs: {apis_str}\nState: {before_metric_state}\nNetwork: {network}\nTime: {time}\n\nProvide real strategy with:\n1. Actual Threat Assessment\n2. Real Risk Prioritization  \n3. Concrete Actions\n4. User Education\n5. Monitoring Updates\n\nBe specific and actionable.",
    
    "quarantine_code_prompt": "Generate working quarantine/blocking code. Use real APIs and working logic. RETURN ONLY EXECUTABLE CODE.\n\nInputs:\nStrategy: {strategy_output}\nAPIs: {apis_str}\nState: {before_metric_state}\nTools: {security_tools_str}\nNetwork: {network}\n\nCode must:\n1. Implement real quarantine actions\n2. Block actual threats\n3. Use working database calls\n4. Handle real errors\n\nSTART WITH: from dotenv import load_dotenv",
    
    "regen_code_prompt": "Fix Python code errors. Use real working fixes. RETURN ONLY EXECUTABLE CODE.\n\nErrors: {errors}\nCode: {latest_response}\n\nFix with:\n1. Real error handling\n2. Working API calls\n3. Proper variable handling\n4. Actual solutions\n\nSTART WITH: from dotenv import load_dotenv"
  }
}